pipeline {
    agent any
    triggers {
        pollSCM('*/5 * * * *')
    }
    stages {
        stage('Cleanup') {
            steps {
                script {
                    env.TEST_IP = "3.87.44.92"
                    env.ANSIBLE_IP = "192.168.56.101"
                }
                sh 'echo "Performing cleanup..."'
                sh 'sudo rm -rf *'
            }
        }
        stage('Clone') {
            steps {
                sh 'echo "Building..."'
                sh 'git clone https://github.com/tomerkul/myflaskproject.git'
                sh 'ls'
            }
        }
        /*
        stage('Upload to Docker Hub') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'SSH_VM', keyFileVariable: 'KEY_FILE')]) {
                    sshagent(['SSH_VM']) {
                        sh '''
                            sudo scp -i $KEY_FILE -o StrictHostKeyChecking=no -rp myflaskproject tomer@$ANSIBLE_IP:/home/tomer/flask-docker
                            ssh-keyscan $ANSIBLE_IP >> /var/lib/jenkins/.ssh/known_hosts
                            ssh -o StrictHostKeyChecking=no -i $KEY_FILE tomer@$ANSIBLE_IP '
                                   cd /home/tomer/flask-docker/myflaskproject/sample-flask
                                   python3 /home/tomer/myflaskproject/sample-flask/findlastversion.py
                                '
                        '''
                    }
                }
            }
        }
        */
        stage('testing') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'docker-test', keyFileVariable: 'KEY_FILE')]) {
                    sh '''
                        ssh-keyscan $TEST_IP >> /var/lib/jenkins/.ssh/known_hosts
                        sudo scp -i $KEY_FILE -o StrictHostKeyChecking=no -rp myflaskproject/sample-flask/runlatest.py myflaskproject/sample-flask/pulllatest.py ec2-user@$TEST_IP:/home/ec2-user/
                        ssh -o StrictHostKeyChecking=no -i $KEY_FILE ec2-user@$TEST_IP '
                               if sudo lsof -i :5000; then
                               sudo kill $(sudo lsof -t -i :5000)
                               fi
                               python3 pulllatest.py
                               python3 runlatest.py
                            '
                    '''
                }
            }
        }
    }
}
